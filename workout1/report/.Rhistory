dat = read_csv(file = datafile, col_names = TRUE, col_types = cols("c","f","f","i","i","i","i","c","r","i","i","i","i","i","i"),na = "")
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c"),na = "")
summary(dat)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "f", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "r", games = "i", minutes = "i", poitns ="i", poitns3 = "i", poitns2 ="1", points1 = "i"), na = "")
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "f", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", poitns ="i", poitns3 = "i", poitns2 ="1", points1 = "i"), na = "")
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "f", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", poitns ="i", poitns3 = "i", poitns2 ="i", points1 = "i"), na = "")
summary(dat)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "f", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="i", points1 = "i"), na = "")
summary(dat)
dat
library(ggplot2)
library(readr)
library(dplyr)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "c", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="i", points1 = "i"), na = "")
summary(dat)
typeof(dat)
typeof(dat)
?read_csv
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "c", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="_", points1 = "i"), na = "")
summary(dat)
?read.csv
?read_csv
team_salaries = arrange(summarise(group_by(dat,team),total_salary = sum(salary), mean_salary = mean(salary), median_salary = median((salary)) ), desc(total_salary))
team_salaries
typeof(team_salaries)
as.data.frame(team_salaries)
?geom_bar
?geom_bar
ggplot(team_salaries,aes(total_salary))+
geom_bar()+
coord_flip()+
ggplot(team_salaries,aes(total_salary))+
geom_bar()+
coord_flip()
ggplot(team_salaries,aes(total_salary))+
geom_bar()
ggplot(team_salaries,aes(total_salary))+
geom_bar(stat = "identity")
ggplot(team_salaries,aes(total_salary))+
geom_bar(stat = "identity")
ggplot(team_salaries,aes(x=team, y=total_salary))+
geom_bar()
ggplot(team_salaries,aes(x=team, y=total_salary))+
geom_col()
ggplot(team_salaries,aes(x=team, y=total_salary))+
geom_col()+
coord_flpi()
ggplot(team_salaries,aes(x=team, y=total_salary))+
geom_col()+
coord_flip()
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary))+
geom_col()+
coord_flip()
ggplot(team_salaries,aes(x = reorder(team,des(total_salary)), y = total_salary))+
geom_col()+
coord_flip()
ggplot(team_salaries,aes(x = reorder(team,desc(total_salary)), y = total_salary))+
geom_col()+
coord_flip()
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary))+
geom_col()+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$salary)
AVg = mean(team_salaries$total_salary)
AVg
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary))+
geom_col()+
geom_hline(aes(yintercept = AVg))
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary))+
geom_col()+
geom_hline(aes(yintercept = AVg))+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary))+
geom_col()+
geom_hline(aes(yintercept = AVg),color = "red")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg), color = "red")+
xlab("Total Salary (in millions)")+
ylab("Team")
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg), color = "red")+
xlab("Total Salary (in millions)")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
xlab("Total Salary (in millions)")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
AVg
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
xlab("Total Salary (in millions)")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Salary",subtitle = waiver())
team_points = arrange(summarise(group_by(dat,team),total_points = sum(points), mean_points = mean(points), median_points = median((points)) ), desc(total_points))
team_points
as.data.frame(team_points)
AVg2 = mean(team_salaries$total_salary)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
points_salary = full_join(team_points,team_salaries)
points_salary
summary(points_salary)
mutate(points_salary, cost_point = total_salary/toal_points)
mutate(points_salary, cost_point = total_salary/total_points)
summary(points_salary$cost_point)
points_salary=mutate(points_salary, cost_point = total_salary/total_points)
summary(points_salary$cost_point)
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", alpha = "Average")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", alpha = "Average")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
library(ggplot2)
library(readr)
library(dplyr)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "c", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="i", points1 = "i"), na = "")
summary(dat)
typeof(dat)
team_salaries = arrange(summarise(group_by(dat,team),total_salary = sum(salary), mean_salary = mean(salary), median_salary = median((salary)) ), desc(total_salary))
team_salaries
as.data.frame(team_salaries)
AVg = mean(team_salaries$total_salary)
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
xlab("Total Salary (in millions)")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Salary",subtitle = waiver())
team_points = arrange(summarise(group_by(dat,team),total_points = sum(points), mean_points = mean(points), median_points = median((points)) ), desc(total_points))
team_points
as.data.frame(team_points)
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", alpha = "Average")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red")+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", size = 1.0)+
xlab("Total Scored Points")+
ylab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
AVg = mean(team_salaries$total_salary)
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
ylab("Total Salary (in millions)")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Salary",subtitle = waiver())
team_points = arrange(summarise(group_by(dat,team),total_points = sum(points), mean_points = mean(points), median_points = median((points)) ), desc(total_points))
team_points
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", size = 1.0)+
ylab("Total Scored Points")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_piont))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
hline(y = median(points_salary$cost_point), color = "orange")+
coord_flip()+
ggtitle("Team ranked by cost per point")
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_piont))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
geom_hline(y = median(points_salary$cost_point), color = "orange")+
coord_flip()+
ggtitle("Team ranked by cost per point")
library(ggplot2)
library(readr)
library(dplyr)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "c", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="i", points1 = "i"), na = "")
summary(dat)
typeof(dat)
team_salaries = arrange(summarise(group_by(dat,team),total_salary = sum(salary), mean_salary = mean(salary), median_salary = median((salary)) ), desc(total_salary))
team_salaries
as.data.frame(team_salaries)
AVg = mean(team_salaries$total_salary)
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
ylab("Total Salary (in millions)")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Salary",subtitle = waiver())
team_points = arrange(summarise(group_by(dat,team),total_points = sum(points), mean_points = mean(points), median_points = median((points)) ), desc(total_points))
team_points
as.data.frame(team_points)
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", size = 1.0)+
ylab("Total Scored Points")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
points_salary = full_join(team_points,team_salaries)
points_salary
summary(points_salary)
points_salary=mutate(points_salary, cost_point = total_salary/total_points)
summary(points_salary$cost_point)
library(ggplot2)
library(readr)
library(dplyr)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat = read_csv(file = datafile, col_names = TRUE, col_types = cols(player = "c", team = "c", position = "f", height = "i", weight = "i", age ="i", experience = "i", college = "c", salary = "d", games = "i", minutes = "i", points ="i", points3 = "i", points2 ="i", points1 = "i"), na = "")
summary(dat)
typeof(dat)
team_salaries = arrange(summarise(group_by(dat,team),total_salary = sum(salary), mean_salary = mean(salary), median_salary = median((salary)) ), desc(total_salary))
team_salaries
as.data.frame(team_salaries)
AVg = mean(team_salaries$total_salary)
ggplot(team_salaries,aes(x = reorder(team,total_salary), y = total_salary/1000000))+
geom_col()+
geom_hline(aes(yintercept = AVg/1000000), color = "red")+
ylab("Total Salary (in millions)")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Salary",subtitle = waiver())
team_points = arrange(summarise(group_by(dat,team),total_points = sum(points), mean_points = mean(points), median_points = median((points)) ), desc(total_points))
team_points
as.data.frame(team_points)
AVg2 = mean(team_points$total_points)
ggplot(team_points,aes(x = reorder(team,total_points), y = total_points))+
geom_col()+
geom_hline(aes(yintercept = AVg2), color = "red", size = 1.0)+
ylab("Total Scored Points")+
xlab("Team")+
coord_flip()+
ggtitle("NBA Teams Ranked by Total Scored Points",subtitle = waiver())
points_salary = full_join(team_points,team_salaries)
points_salary
summary(points_salary)
points_salary=mutate(points_salary, cost_point = total_salary/total_points)
summary(points_salary$cost_point)
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_piont))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
geom_hline(y = median(points_salary$cost_point), color = "orange")+
coord_flip()+
ggtitle("Team ranked by cost per point")
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_point))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
geom_hline(y = median(points_salary$cost_point), color = "orange")+
coord_flip()+
ggtitle("Team ranked by cost per point")
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_point))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
geom_hline(yintercept = median(points_salary$cost_point), color = "orange")+
coord_flip()+
ggtitle("Team ranked by cost per point")
ggplot(points_salary,aes(x = reorder(team, cost_point), y = cost_point))+
geom_col()+
xlab("Team")+
ylab("Cost Per Point")+
geom_hline(yintercept = median(points_salary$cost_point), color = "orange",size = 1.0)+
coord_flip()+
ggtitle("Team ranked by cost per point")
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geam_raster(ase(fill = cost_point),hjust = 0.5, vjust = 0.5, interpolate = F)
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_raster(ase(fill = cost_point),hjust = 0.5, vjust = 0.5, interpolate = F)
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_raster(aes(fill = cost_point),hjust = 0.5, vjust = 0.5, interpolate = F)
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_point()
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_raster(aes(fill = cost_point),hjust = 0.5, vjust = 0.5, interpolate = T)
?geom_raster
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_tile(aes(fill = cost_point))
?geom_raster
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(fill = cost_point))
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(size = cost_point))
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(color = cost_point))
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(color = cost_point)
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(color = cost_point))
?geom_count
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_point()+
geom_count(aes(color = cost_point))
?geom_count
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(color = cost_point))+
ggtile("Scatter graph of median of salaries and poits of different teams")+
xlab("median of points")+
ylab("median of salary")
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(color = cost_point))+
ggtitle("Scatter graph of median of salaries and poits of different teams")+
xlab("median of points")+
ylab("median of salary")
?geom_count
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(color = cost_point))+
ggtitle("Scatter graph of median of salaries and points of different teams")+
xlab("median of points")+
ylab("median of salary")
?geom_count
ggplot(points_salary, aes(x = median_points, y = median_salary))+
geom_count(aes(color = cost_point))+
ggtitle("Scatter graph of median of salaries and points of different teams")+
xlab("median of points")+
ylab("median of salary")
git status
getwd()
setwd("../Desktop/workout1/report")
getwd
getwd()
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
View(data2)
summarise(data2, xxxx = length(data2$shot_type[data2$shot_type == "2PT Field Goal"]))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
summarise(data2, xxxx = length(data2$shot_type[data2$shot_type == "2PT Field Goal"]))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
summarise(group_by(data2,name), total_2point = length(data2$shot_type[data2$shot_type == "2PT Field Goal"]), made_2point = length(data2$shot_type[data2$shot_type == "2PT Field Goal" & data2$shot_made_flag == "shot_yes"]))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
summarise(group_by(data2,name), total_2point = lengthshot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = ) %>% arrange(des(perc_made_2point))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(des(perc_made_2point))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(dec(perc_made_2point))
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(desc(perc_made_2point))
effeciency_2point
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(desc(perc_made_2point))
effeciency_3point = summarise(group_by(data2,name), total_3point = length(shot_type[shot_type == "3PT Field Goal"]), made_3point = length(shot_type[shot_type == "3PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_3point = effeciency_3point %>% mutate(perc_made_2point = made_3point / total_3point) %>% arrange(desc(perc_made_3point))
effeciency_3point = summarise(group_by(data2,name), total_3point = length(shot_type[shot_type == "3PT Field Goal"]), made_3point = length(shot_type[shot_type == "3PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_3point = effeciency_3point %>% mutate(perc_made_3point = made_3point / total_3point) %>% arrange(desc(perc_made_3point))
effeciency_3point
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
effeciency = effeciency %>% mutate(perc_made = made / total) %>% arrange(desc(perc_made))
effeciency
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(desc(perc_made_2point))
effeciency_2point
View(data2)
library(dplyr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency_2point = summarise(group_by(data2,name), total_2point = length(shot_type[shot_type == "2PT Field Goal"]), made_2point = length(shot_type[shot_type == "2PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_2point = effeciency_2point %>% mutate(perc_made_2point = made_2point / total_2point) %>% arrange(desc(perc_made_2point))
effeciency_2point
effeciency_3point = summarise(group_by(data2,name), total_3point = length(shot_type[shot_type == "3PT Field Goal"]), made_3point = length(shot_type[shot_type == "3PT Field Goal" & shot_made_flag == "shot_yes"]))
effeciency_3point = effeciency_3point %>% mutate(perc_made_3point = made_3point / total_3point) %>% arrange(desc(perc_made_3point))
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
effeciency = effeciency %>% mutate(perc_made = made / total) %>% arrange(desc(perc_made))
View(effeciency)
View(effeciency_3point)
View(effeciency_2point)
View(effeciency)
getwd()
?table
install.packages("xtable")
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
library(dplyr)
library(xtable)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
effeciency = effeciency %>% mutate(perc_made = made / total) %>% arrange(desc(perc_made))
xtable(effeciency,digits = 3, caption = "Overall Effective Shooting Percentage")
library(dplyr)
library(knitr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
effeciency = effeciency %>% mutate(perc_made = made / total) %>% arrange(desc(perc_made))
kable(effeciency, caption = "Overall Effective Shooting Percentage")
?kable
library(dplyr)
library(knitr)
data2 = read.csv("../data/shots-data.csv", stringsAsFactors = F)
effeciency = summarise(group_by(data2,name), total = length(shot_type), made = length(shot_type[shot_made_flag == "shot_yes"]))
effeciency = effeciency %>% mutate(perc_made = made / total) %>% arrange(desc(perc_made))
kable(effeciency, caption = "Overall Effective Shooting Percentage", align = "c")
